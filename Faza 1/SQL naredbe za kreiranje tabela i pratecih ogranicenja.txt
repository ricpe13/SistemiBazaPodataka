CREATE TABLE RADNIK (
IDR NUMBER(4,0) PRIMARY KEY,
IME VARCHAR2(10) NOT NULL,
PREZIME VARCHAR2(20) NOT NULL,
JMBG VARCHAR2(13) NOT NULL UNIQUE,
CHECK(LENGTH(JMBG)=13),
ADRESA VARCHAR(30) NOT NULL,
BRRADNEKNJIZICE NUMBER(10,0) NOT NULL UNIQUE,
IMERODITELJA VARCHAR2(15) NOT NULL,
STRUCNASPREMA VARCHAR2(15) NOT NULL,
DATUMRODJ DATE NOT NULL,
ZAZELENILO NUMBER(1,0) NOT NULL,
ZAHIGIJENU NUMBER(1,0) NOT NULL,
ZAOBJEKAT NUMBER(1,0) NOT NULL,
IDZP NUMBER (4,0) NOT NULL,
IDGRUPE NUMBER (4,0) NOT NULL
);

CREATE TABLE ZASTITA (
IDZASTITE NUMBER(4,0) PRIMARY KEY,
INSTITUCIJA VARCHAR2(100) NOT NULL,
DATUMOD DATE NOT NULL,
NOVCANASREDSTVA NUMBER(10,0) NOT NULL,
OPISZNACAJA VARCHAR2(50) NOT NULL
);

CREATE TABLE GRUPA_RADNIKA (
IDG NUMBER (4,0) PRIMARY KEY,
NAZIVG VARCHAR2(100) NOT NULL,
IDPARKA NUMBER (4,0) NOT NULL
);

CREATE TABLE SEF (
IDRAD NUMBER(4,0) PRIMARY KEY,
CONSTRAINT IDS FOREIGN KEY (IDRAD) REFERENCES RADNIK(IDR),
MATBR VARCHAR2(13) NOT NULL UNIQUE,
CHECK (LENGTH(MATBR)=13),
IDGRUPE NUMBER (4,0) NOT NULL
);

CREATE TABLE ZELENA_POVRSINA (
IDZ NUMBER (4,0) PRIMARY KEY,
NAZIVGRADSKEOPSTINE VARCHAR2(20) NOT NULL,
ZONAUGROZENOSTI VARCHAR2(2) NOT NULL,
TIPZP VARCHAR2(15) NOT NULL
);

CREATE TABLE PARK (
IDZ NUMBER (4,0) PRIMARY KEY,
NAZIVP VARCHAR2(30) NOT NULL,
POVRSINAP NUMBER(5,2) NOT NULL,
CONSTRAINT IDZP FOREIGN KEY (IDZ) REFERENCES ZELENA_POVRSINA(IDZ) 
);

CREATE TABLE DRVORED (
IDZ NUMBER (4,0) PRIMARY KEY,
ULICA VARCHAR2(50) NOT NULL,
DUZINA NUMBER (5,2) NOT NULL,
VRSTADRVETA VARCHAR2 (10) NOT NULL,
BROJSTABALA NUMBER (4) NOT NULL,
CONSTRAINT IDD FOREIGN KEY (IDZ) REFERENCES ZELENA_POVRSINA(IDZ)
);

CREATE TABLE TRAVNJAK (
IDZ NUMBER (4,0) PRIMARY KEY,
ADRESAZGRADE VARCHAR2(50) NOT NULL,
POVRSINAT NUMBER (5,2) NOT NULL,
CONSTRAINT IDT FOREIGN KEY (IDZ) REFERENCES ZELENA_POVRSINA(IDZ)
);

CREATE TABLE KLUPA (
REDNIBR NUMBER (4,0) PRIMARY KEY,
IDPARKA NUMBER (4,0) NOT NULL
);

CREATE TABLE DRVO (
REDNIBR NUMBER (4,0) PRIMARY KEY,
VISINAKROSNJE NUMBER (4,2) NOT NULL,
VRSTA VARCHAR2(20) NOT NULL,
DATUMSADNJE DATE NOT NULL,
POVRSINAK NUMBER(5,2) NOT NULL,
OBIMDEBLA NUMBER(5,2) NOT NULL,
IDPARKA NUMBER (4,0) NOT NULL,
IDZASTITE NUMBER (4,0) NOT NULL
);

CREATE TABLE SKULPTURA (
REDNIBR NUMBER(4,0) PRIMARY KEY,
AUTOR VARCHAR2(50) NOT NULL,
IDZO NUMBER (4,0) NOT NULL,
IDPARKA NUMBER (4,0) NOT NULL
);

CREATE TABLE SPOMENIK (
REDNIBR NUMBER (4,0) PRIMARY KEY,
NAZIVS VARCHAR2(30) NOT NULL,
IDZO NUMBER (4,0) NOT NULL,
IDPARKA NUMBER (4,0) NOT NULL
);

CREATE TABLE DECIJE_IGRALISTE (
REDNIBR NUMBER (4,0) PRIMARY KEY,
BRIGRACAKA NUMBER (2,0) NOT NULL,
PESAK NUMBER(1,0) NOT NULL,
STAROST NUMBER(2,0) NOT NULL,
IDPARKA NUMBER (4,0) NOT NULL
);

CREATE TABLE SVETILJKA (
REDNIBR NUMBER (4,0) PRIMARY KEY,
IDPARKA NUMBER (4,0) NOT NULL
);

CREATE TABLE FONTANA (
REDNIBR NUMBER (4,0) PRIMARY KEY,
IDPARKA NUMBER (4,0) NOT NULL
);

CREATE TABLE ZASTICENI_OBJEKAT (
IDZO NUMBER (4,0) PRIMARY KEY,
IDZASTITE NUMBER (4,0) NOT NULL
);

ALTER TABLE RADNIK
ADD CONSTRAINT ZZ CHECK (ZAZELENILO IN (0,1));

ALTER TABLE RADNIK
ADD CONSTRAINT ZH CHECK (ZAHIGIJENU IN (0,1));

ALTER TABLE RADNIK
ADD CONSTRAINT ZO CHECK (ZAOBJEKAT IN (0,1));

ALTER TABLE RADNIK
ADD CONSTRAINT ZP FOREIGN KEY (IDZP) REFERENCES ZELENA_POVRSINA(IDZ);

ALTER TABLE RADNIK
ADD CONSTRAINT G FOREIGN KEY (IDGRUPE) REFERENCES GRUPA_RADNIKA(IDG);

ALTER TABLE RADNIK
ADD CONSTRAINT SAMOCIFREJMBG CHECK (REGEXP_LIKE(JMBG, '^[0-9]+$'));

ALTER TABLE GRUPA_RADNIKA
ADD CONSTRAINT GRP FOREIGN KEY (IDPARKA) REFERENCES PARK (IDZ);

ALTER TABLE SEF
ADD CONSTRAINT SGR FOREIGN KEY (IDGRUPE) REFERENCES GRUPA_RADNIKA(IDG);

ALTER TABLE SEF
ADD CONSTRAINT SAMOCIFREMATBR CHECK (REGEXP_LIKE(MATBR, '^[0-9]+$'));

ALTER TABLE KLUPA
ADD CONSTRAINT KP FOREIGN KEY (IDPARKA) REFERENCES PARK(IDZ);

ALTER TABLE DRVO
ADD CONSTRAINT DP FOREIGN KEY (IDPARKA) REFERENCES PARK(IDZ);

ALTER TABLE DRVO
ADD CONSTRAINT DG FOREIGN KEY (IDZASTITE) REFERENCES ZASTITA(IDZASTITE);

ALTER TABLE SPOMENIK
ADD CONSTRAINT SZO FOREIGN KEY (IDZO) REFERENCES ZASTICENI_OBJEKAT(IDZO);

ALTER TABLE SPOMENIK
ADD CONSTRAINT SP FOREIGN KEY (IDPARKA) REFERENCES PARK(IDZ);

ALTER TABLE SKULPTURA
ADD CONSTRAINT SKZO FOREIGN KEY (IDZO) REFERENCES ZASTICENI_OBJEKAT(IDZO);

ALTER TABLE SKULPTURA
ADD CONSTRAINT SKP FOREIGN KEY (IDPARKA) REFERENCES PARK(IDZ);

ALTER TABLE DECIJE_IGRALISTE
ADD CONSTRAINT DIP FOREIGN KEY (IDPARKA) REFERENCES PARK(IDZ);

ALTER TABLE DECIJE_IGRALISTE
ADD CONSTRAINT P CHECK (PESAK IN (0,1));

ALTER TABLE SVETILJKA
ADD CONSTRAINT SIP FOREIGN KEY (IDPARKA) REFERENCES PARK(IDZ);

ALTER TABLE FONTANA
ADD CONSTRAINT FP FOREIGN KEY (IDPARKA) REFERENCES PARK(IDZ);

ALTER TABLE ZASTICENI_OBJEKAT
ADD CONSTRAINT ZOZ FOREIGN KEY (IDZASTITE) REFERENCES ZASTITA (IDZASTITE);

CREATE TRIGGER KLUPATRIGGER
BEFORE INSERT OR UPDATE ON KLUPA
FOR EACH ROW
DECLARE
  BROJAC NUMBER;
BEGIN
  SELECT COUNT(*) INTO BROJAC FROM (
    SELECT REDNIBR, IDPARKA FROM DRVO
    UNION ALL
    SELECT REDNIBR, IDPARKA FROM SKULPTURA
    UNION ALL
    SELECT REDNIBR, IDPARKA FROM SPOMENIK
    UNION ALL
    SELECT REDNIBR, IDPARKA FROM FONTANA
    UNION ALL
    SELECT REDNIBR, IDPARKA FROM SVETILJKA
    UNION ALL
    SELECT REDNIBR, IDPARKA FROM DECIJE_IGRALISTE
  ) 
  WHERE REDNIBR = :NEW.REDNIBR AND IDPARKA = :NEW.IDPARKA;
  IF BROJAC > 0 THEN
    RAISE_APPLICATION_ERROR(-20001, 'Vec postoji objekat sa tim rednim brojem u tom parku');
  END IF;
END;

CREATE TRIGGER DRVOTRIGGER
BEFORE INSERT OR UPDATE ON DRVO
FOR EACH ROW
DECLARE
  BROJAC NUMBER;
BEGIN
  SELECT COUNT(*) INTO BROJAC FROM (
    SELECT REDNIBR, IDPARKA FROM KLUPA
    UNION ALL
    SELECT REDNIBR, IDPARKA FROM SKULPTURA
    UNION ALL
    SELECT REDNIBR, IDPARKA FROM SPOMENIK
    UNION ALL
    SELECT REDNIBR, IDPARKA FROM FONTANA
    UNION ALL
    SELECT REDNIBR, IDPARKA FROM SVETILJKA
    UNION ALL
    SELECT REDNIBR, IDPARKA FROM DECIJE_IGRALISTE
  ) 
  WHERE REDNIBR = :NEW.REDNIBR AND IDPARKA = :NEW.IDPARKA;
  IF BROJAC > 0 THEN
    RAISE_APPLICATION_ERROR(-20001, 'Vec postoji objekat sa tim rednim brojem u tom parku');
  END IF;
END;

CREATE TRIGGER SKULPTURATRIGGER
BEFORE INSERT OR UPDATE ON SKULPTURA
FOR EACH ROW
DECLARE
  BROJAC NUMBER;
BEGIN
  SELECT COUNT(*) INTO BROJAC FROM (
    SELECT REDNIBR, IDPARKA FROM KLUPA
    UNION ALL
    SELECT REDNIBR, IDPARKA FROM DRVO
    UNION ALL
    SELECT REDNIBR, IDPARKA FROM SPOMENIK
    UNION ALL
    SELECT REDNIBR, IDPARKA FROM FONTANA
    UNION ALL
    SELECT REDNIBR, IDPARKA FROM SVETILJKA
    UNION ALL
    SELECT REDNIBR, IDPARKA FROM DECIJE_IGRALISTE
  ) 
  WHERE REDNIBR = :NEW.REDNIBR AND IDPARKA = :NEW.IDPARKA;
  IF BROJAC > 0 THEN
    RAISE_APPLICATION_ERROR(-20001, 'Vec postoji objekat sa tim rednim brojem u tom parku');
  END IF;
END;

CREATE TRIGGER SPOMENIKTRIGGER
BEFORE INSERT OR UPDATE ON SPOMENIK
FOR EACH ROW
DECLARE
  BROJAC NUMBER;
BEGIN
  SELECT COUNT(*) INTO BROJAC FROM (
    SELECT REDNIBR, IDPARKA FROM KLUPA
    UNION ALL
    SELECT REDNIBR, IDPARKA FROM DRVO
    UNION ALL
    SELECT REDNIBR, IDPARKA FROM SKULPTURA
    UNION ALL
    SELECT REDNIBR, IDPARKA FROM FONTANA
    UNION ALL
    SELECT REDNIBR, IDPARKA FROM SVETILJKA
    UNION ALL
    SELECT REDNIBR, IDPARKA FROM DECIJE_IGRALISTE
  ) 
  WHERE REDNIBR = :NEW.REDNIBR AND IDPARKA = :NEW.IDPARKA;
  IF BROJAC > 0 THEN
    RAISE_APPLICATION_ERROR(-20001, 'Vec postoji objekat sa tim rednim brojem u tom parku');
  END IF;
END;

CREATE TRIGGER DECIJEIGRALISTETRIGGER
BEFORE INSERT OR UPDATE ON DECIJE_IGRALISTE
FOR EACH ROW
DECLARE
  BROJAC NUMBER;
BEGIN
  SELECT COUNT(*) INTO BROJAC FROM (
    SELECT REDNIBR, IDPARKA FROM KLUPA
    UNION ALL
    SELECT REDNIBR, IDPARKA FROM DRVO
    UNION ALL
    SELECT REDNIBR, IDPARKA FROM SKULPTURA
    UNION ALL
    SELECT REDNIBR, IDPARKA FROM FONTANA
    UNION ALL
    SELECT REDNIBR, IDPARKA FROM SVETILJKA
    UNION ALL
    SELECT REDNIBR, IDPARKA FROM SPOMENIK
  ) 
  WHERE REDNIBR = :NEW.REDNIBR AND IDPARKA = :NEW.IDPARKA;
  IF BROJAC > 0 THEN
    RAISE_APPLICATION_ERROR(-20001, 'Vec postoji objekat sa tim rednim brojem u tom parku');
  END IF;
END;

CREATE TRIGGER SVETILJKATRIGGER
BEFORE INSERT OR UPDATE ON SVETILJKA
FOR EACH ROW
DECLARE
  BROJAC NUMBER;
BEGIN
  SELECT COUNT(*) INTO BROJAC FROM (
    SELECT REDNIBR, IDPARKA FROM KLUPA
    UNION ALL
    SELECT REDNIBR, IDPARKA FROM DRVO
    UNION ALL
    SELECT REDNIBR, IDPARKA FROM SKULPTURA
    UNION ALL
    SELECT REDNIBR, IDPARKA FROM FONTANA
    UNION ALL
    SELECT REDNIBR, IDPARKA FROM DECIJE_IGRALISTE
    UNION ALL
    SELECT REDNIBR, IDPARKA FROM SPOMENIK
  ) 
  WHERE REDNIBR = :NEW.REDNIBR AND IDPARKA = :NEW.IDPARKA;
  IF BROJAC > 0 THEN
    RAISE_APPLICATION_ERROR(-20001, 'Vec postoji objekat sa tim rednim brojem u tom parku');
  END IF;
END;

CREATE TRIGGER FONTANATRIGGER
BEFORE INSERT OR UPDATE ON FONTANA
FOR EACH ROW
DECLARE
  BROJAC NUMBER;
BEGIN
  SELECT COUNT(*) INTO BROJAC FROM (
    SELECT REDNIBR, IDPARKA FROM KLUPA
    UNION ALL
    SELECT REDNIBR, IDPARKA FROM DRVO
    UNION ALL
    SELECT REDNIBR, IDPARKA FROM SKULPTURA
    UNION ALL
    SELECT REDNIBR, IDPARKA FROM SVETILJKA
    UNION ALL
    SELECT REDNIBR, IDPARKA FROM DECIJE_IGRALISTE
    UNION ALL
    SELECT REDNIBR, IDPARKA FROM SPOMENIK
  ) 
  WHERE REDNIBR = :NEW.REDNIBR AND IDPARKA = :NEW.IDPARKA;

  IF BROJAC > 0 THEN
    RAISE_APPLICATION_ERROR(-20001, 'Vec postoji objekat sa tim rednim brojem u tom parku');
  END IF;
END;

